import { IExpectedVerifiableCredential, TokenType, IExpectedVerifiablePresentation, IExpectedSelfIssued, IExpectedSiop } from '../lib';

export default class SiopValidationSimulation {
  public static issuerDid = 'did:ion:EiCY7JdijBQ9bIoFsZfYQAPRTQ0-X9ptxr7h4kUJUS3DUw?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDUG81V0hQT0tKN1BEenQyLUFLclM2TU9VWTlEQzBSTjNkNjB4dWhUbFR1USIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJZUmJoRmdIS0FNMUxQcjUzOFF6M3p6cWxxOWlDc1g3NjJteGc1WkxNMnFnIiwieSI6InFFdGl0YXJ3VEVTajlpRWNWeE1fVUp6QVhDbU1fQ0JPeVotNHY5MjB0cUEifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpQ3I2eTJsTHpLVGRHbEZjRjNiaGl0THZNZkZ5T1Y1NkJ3NzNMWVBndXVkdlEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQVNWbDFTT0w0SWZrMHhoRW9jNm5WSEEtWkYtQ2NuYUVPeHplVklJOFdnY2ciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiI3TDRfc2lnbl9Qa05zQkY1el8xIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJZUmJoRmdIS0FNMUxQcjUzOFF6M3p6cWxxOWlDc1g3NjJteGc1WkxNMnFnIiwieSI6InFFdGl0YXJ3VEVTajlpRWNWeE1fVUp6QVhDbU1fQ0JPeVotNHY5MjB0cUEifSwidXNhZ2UiOlsib3BzIiwiYXV0aCIsImdlbmVyYWwiXX1dfX1dfQ';
  
  public static siExpected = <IExpectedSelfIssued>{ type: TokenType.selfIssued };
  public static siopExpected = <IExpectedSiop>{ type: TokenType.siop, audience: 'https://test-relyingparty.azurewebsites.net/verify' };
  public static vpExpected = <IExpectedVerifiablePresentation>{ type: TokenType.verifiablePresentation, didAudience: SiopValidationSimulation.issuerDid };
  public static vcExpected = <IExpectedVerifiableCredential>{ type: TokenType.verifiableCredential, contractIssuers: {'ProofOfResidenceCredential': [`did:ion:EiDClccVJaiy6gDk6YW7PgZ9SjAUyVLc34_ITVMeFLEvdA?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDTmMydnoxUWI0bzJSMFBoVGpDSDA0cGhZOVdwUEpCMEhJX0hDT0NyTHlvdyIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJFRXFVZmRzOUhtdUJBZ2V1bUtLbE1BZ2dhTjRvYXZtT3ZWLUhJZ1RLM1Y0IiwieSI6ImdIVlFablBZYkdBWkJicW9vRDJTS0VWNXBSaml5UGxFWjZ5VEZtMGpHNmcifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpQnYzdWFXTXBIQXhNRlJ2WVd5LVlwSDRISE5MQW1KSWpyUzllRTFZcnNiMlEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQ2VJQ0dCT09EbDVqSXRUSHJzLWNDd2RfcnQtckhobElnQkQweXJ0aEFBWWciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiJzaWdfOTdhN2VlOTUiLCJ0eXBlIjoiRWNkc2FTZWNwMjU2azFWZXJpZmljYXRpb25LZXkyMDE5IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2Ijoic2VjcDI1NmsxIiwieCI6Ik9XNzBWOEpNOHpoQVZSZTloRUp5Z1ZwTlJPalZHbjJpcW5qbUl0REVhM3ciLCJ5IjoiOTJUV3gzbVBJZHpwQ2xMTHRzdUNwTUROZ1FwMlc5SERiNGY3dlFzMGhvbyJ9LCJ1c2FnZSI6WyJvcHMiLCJhdXRoIiwiZ2VuZXJhbCJdfV19fV19",
  "sub": "did:ion:EiCY7JdijBQ9bIoFsZfYQAPRTQ0-X9ptxr7h4kUJUS3DUw?-ion-initial-state=eyJkZWx0YV9oYXNoIjoiRWlDUG81V0hQT0tKN1BEenQyLUFLclM2TU9VWTlEQzBSTjNkNjB4dWhUbFR1USIsInJlY292ZXJ5X2tleSI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJZUmJoRmdIS0FNMUxQcjUzOFF6M3p6cWxxOWlDc1g3NjJteGc1WkxNMnFnIiwieSI6InFFdGl0YXJ3VEVTajlpRWNWeE1fVUp6QVhDbU1fQ0JPeVotNHY5MjB0cUEifSwicmVjb3ZlcnlfY29tbWl0bWVudCI6IkVpQ3I2eTJsTHpLVGRHbEZjRjNiaGl0THZNZkZ5T1Y1NkJ3NzNMWVBndXVkdlEifQ.eyJ1cGRhdGVfY29tbWl0bWVudCI6IkVpQVNWbDFTT0w0SWZrMHhoRW9jNm5WSEEtWkYtQ2NuYUVPeHplVklJOFdnY2ciLCJwYXRjaGVzIjpbeyJhY3Rpb24iOiJyZXBsYWNlIiwiZG9jdW1lbnQiOnsicHVibGljS2V5cyI6W3siaWQiOiI3TDRfc2lnbl9Qa05zQkY1el8xIiwidHlwZSI6IkVjZHNhU2VjcDI1NmsxVmVyaWZpY2F0aW9uS2V5MjAxOSIsImp3ayI6eyJrdHkiOiJFQyIsImNydiI6InNlY3AyNTZrMSIsIngiOiJZUmJoRmdIS0FNMUxQcjUzOFF6M3p6cWxxOWlDc1g3NjJteGc1WkxNMnFnIiwieSI6InFFdGl0YXJ3VEVTajlpRWNWeE1fVUp6QVhDbU1fQ0JPeVotNHY5MjB0cUEifSwidXNhZ2UiOlsib3BzIiwiYXV0aCIsImdlbmVyYWwiXX1dfX1dfQ`]} };

  public static token =  'eyJhbGciOiJFUzI1NksiLCJraWQiOiJkaWQ6aW9uOkVpQ1k3SmRpakJROWJJb0ZzWmZZUUFQUlRRMC1YOXB0eHI3aDRrVUpVUzNEVXc_LWlvbi1pbml0aWFsLXN0YXRlPWV5SmtaV3gwWVY5b1lYTm9Jam9pUldsRFVHODFWMGhRVDB0S04xQkVlblF5TFVGTGNsTTJUVTlWV1RsRVF6QlNUak5rTmpCNGRXaFViRlIxVVNJc0luSmxZMjkyWlhKNVgydGxlU0k2ZXlKcmRIa2lPaUpGUXlJc0ltTnlkaUk2SW5ObFkzQXlOVFpyTVNJc0luZ2lPaUpaVW1Kb1JtZElTMEZOTVV4UWNqVXpPRkY2TTNwNmNXeHhPV2xEYzFnM05qSnRlR2MxV2t4Tk1uRm5JaXdpZVNJNkluRkZkR2wwWVhKM1ZFVlRhamxwUldOV2VFMWZWVXA2UVZoRGJVMWZRMEpQZVZvdE5IWTVNakIwY1VFaWZTd2ljbVZqYjNabGNubGZZMjl0YldsMGJXVnVkQ0k2SWtWcFEzSTJlVEpzVEhwTFZHUkhiRVpqUmpOaWFHbDBUSFpOWmtaNVQxWTFOa0ozTnpOTVdWQm5kWFZrZGxFaWZRLmV5SjFjR1JoZEdWZlkyOXRiV2wwYldWdWRDSTZJa1ZwUVZOV2JERlRUMHcwU1dack1IaG9SVzlqTm01V1NFRXRXa1l0UTJOdVlVVlBlSHBsVmtsSk9GZG5ZMmNpTENKd1lYUmphR1Z6SWpwYmV5SmhZM1JwYjI0aU9pSnlaWEJzWVdObElpd2laRzlqZFcxbGJuUWlPbnNpY0hWaWJHbGpTMlY1Y3lJNlczc2lhV1FpT2lJM1REUmZjMmxuYmw5UWEwNXpRa1kxZWw4eElpd2lkSGx3WlNJNklrVmpaSE5oVTJWamNESTFObXN4Vm1WeWFXWnBZMkYwYVc5dVMyVjVNakF4T1NJc0ltcDNheUk2ZXlKcmRIa2lPaUpGUXlJc0ltTnlkaUk2SW5ObFkzQXlOVFpyTVNJc0luZ2lPaUpaVW1Kb1JtZElTMEZOTVV4UWNqVXpPRkY2TTNwNmNXeHhPV2xEYzFnM05qSnRlR2MxV2t4Tk1uRm5JaXdpZVNJNkluRkZkR2wwWVhKM1ZFVlRhamxwUldOV2VFMWZWVXA2UVZoRGJVMWZRMEpQZVZvdE5IWTVNakIwY1VFaWZTd2lkWE5oWjJVaU9sc2liM0J6SWl3aVlYVjBhQ0lzSW1kbGJtVnlZV3dpWFgxZGZYMWRmUSM3TDRfc2lnbl9Qa05zQkY1el8xIn0..MEUCIQDT4KTjp9yLOceAdJxj2MlwDWJMwetO6oORA__UTYl1IQIgNL1sUhLBJKpwgTzZLkad6krOw8F8kfzJVtg1tyY4klA';
  
 

}